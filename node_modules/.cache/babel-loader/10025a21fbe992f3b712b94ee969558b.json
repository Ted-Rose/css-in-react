{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Study\\\\CSS\\\\css-in-react\\\\src\\\\EmailInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmailInput = () => {\n  _s();\n\n  const inputChangeHandler = event => {\n    setInput(event.target.value);\n  };\n\n  const [message, setMessage] = React.useState(\"\");\n  const [input, setInput] = React.useState(\"\");\n\n  const emailValidation = () => {\n    const emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    return !(!input || emailRegex.test(input) === false);\n  };\n\n  const countryValidation = () => {\n    const countryRegex = /.co$/;\n    return !input || countryRegex.test(input) === false;\n  };\n\n  const onSubmit = props => {\n    const isEmailValid = emailValidation();\n    const countryValid = countryValidation();\n\n    if (Object.keys(input).length === 0) {\n      setMessage(\"Email adress is required!\");\n    } else if (!countryValid) {\n      setMessage(\"We are not accepting subscriptions from Colombia emails!\");\n    } else if (!isEmailValid) {\n      setMessage(\"Email Address not valid!\");\n    } else {\n      setMessage(\"Thanks for subscribing!\");\n    }\n\n    props.onChange(message);\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: input,\n      onChange: inputChangeHandler,\n      className: \"form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n\n_s(EmailInput, \"U1n/kgGtC7R0h+ePhq5/uU3TveU=\");\n\n_c = EmailInput;\nexport default EmailInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailInput\");","map":{"version":3,"names":["React","EmailInput","inputChangeHandler","event","setInput","target","value","message","setMessage","useState","input","emailValidation","emailRegex","test","countryValidation","countryRegex","onSubmit","props","isEmailValid","countryValid","Object","keys","length","onChange"],"sources":["C:/wamp64/www/Study/CSS/css-in-react/src/EmailInput.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst EmailInput = () => {\r\n  const inputChangeHandler = (event) => {\r\n      setInput(event.target.value);\r\n      \r\n  };\r\n\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [input, setInput] = React.useState(\"\");\r\n\r\n  const emailValidation = () => {\r\n    const emailRegex =\r\n      /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return !(!input || emailRegex.test(input) === false);\r\n  };\r\n\r\n  const countryValidation = () => {\r\n    const countryRegex = /.co$/;\r\n    return !input || countryRegex.test(input) === false;\r\n  };\r\n\r\n  const onSubmit = (props) => {\r\n    const isEmailValid = emailValidation();\r\n    const countryValid = countryValidation();\r\n\r\n    if (Object.keys(input).length === 0) {\r\n      setMessage(\"Email adress is required!\");\r\n    } else if (!countryValid) {\r\n      setMessage(\"We are not accepting subscriptions from Colombia emails!\");\r\n    } else if (!isEmailValid) {\r\n      setMessage(\"Email Address not valid!\");\r\n    } else {\r\n      setMessage(\"Thanks for subscribing!\");\r\n      }\r\n      props.onChange(message)\r\n  };\r\n  <div>\r\n    <input\r\n      type=\"email\"\r\n      name=\"email\"\r\n      value={input}\r\n      onChange={inputChangeHandler}\r\n      className=\"form-control\"\r\n    />\r\n\r\n    <div className=\"d-grid\">\r\n      <button type=\"submit\" className=\"btn btn-primary\" onClick={onSubmit}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n  </div>;\r\n};\r\n\r\nexport default EmailInput;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;IAClCC,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAR;EAEH,CAHD;;EAKA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA9B;EACA,MAAM,CAACC,KAAD,EAAQN,QAAR,IAAoBJ,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;;EAEA,MAAME,eAAe,GAAG,MAAM;IAC5B,MAAMC,UAAU,GACd,sHADF;IAEA,OAAO,EAAE,CAACF,KAAD,IAAUE,UAAU,CAACC,IAAX,CAAgBH,KAAhB,MAA2B,KAAvC,CAAP;EACD,CAJD;;EAMA,MAAMI,iBAAiB,GAAG,MAAM;IAC9B,MAAMC,YAAY,GAAG,MAArB;IACA,OAAO,CAACL,KAAD,IAAUK,YAAY,CAACF,IAAb,CAAkBH,KAAlB,MAA6B,KAA9C;EACD,CAHD;;EAKA,MAAMM,QAAQ,GAAIC,KAAD,IAAW;IAC1B,MAAMC,YAAY,GAAGP,eAAe,EAApC;IACA,MAAMQ,YAAY,GAAGL,iBAAiB,EAAtC;;IAEA,IAAIM,MAAM,CAACC,IAAP,CAAYX,KAAZ,EAAmBY,MAAnB,KAA8B,CAAlC,EAAqC;MACnCd,UAAU,CAAC,2BAAD,CAAV;IACD,CAFD,MAEO,IAAI,CAACW,YAAL,EAAmB;MACxBX,UAAU,CAAC,0DAAD,CAAV;IACD,CAFM,MAEA,IAAI,CAACU,YAAL,EAAmB;MACxBV,UAAU,CAAC,0BAAD,CAAV;IACD,CAFM,MAEA;MACLA,UAAU,CAAC,yBAAD,CAAV;IACC;;IACDS,KAAK,CAACM,QAAN,CAAehB,OAAf;EACH,CAdD;;EAeA;EAAA;IAAA,wBACE;MACE,IAAI,EAAC,OADP;MAEE,IAAI,EAAC,OAFP;MAGE,KAAK,EAAEG,KAHT;MAIE,QAAQ,EAAER,kBAJZ;MAKE,SAAS,EAAC;IALZ;MAAA;MAAA;MAAA;IAAA,QADF,eASE;MAAK,SAAS,EAAC,QAAf;MAAA,uBACE;QAAQ,IAAI,EAAC,QAAb;QAAsB,SAAS,EAAC,iBAAhC;QAAkD,OAAO,EAAEc,QAA3D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA;AAeD,CAlDD;;GAAMf,U;;KAAAA,U;AAoDN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}