{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Study\\\\CSS\\\\css-in-react\\\\src\\\\EmailForm.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmailForm = () => {\n  /* const [email, setEmail] = React.useState(\"\");\r\n  const [isvalid, setIsvalid] = React.useState(false);\r\n  const [countryValid, setCountryValid] = React.useState(false);\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [input, setInput] = React.useState(\"\");\r\n      const inputChangeHandler = (event) => {\r\n      setInput(event.target.value);\r\n  \r\n  }\r\n    const emailValidation = () => {\r\n      const emailRegex =\r\n        /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n      return !(!input || emailRegex.test(input) === false);\r\n    }\r\n  \r\n    const countryValidation = () => {\r\n      const countryRegex = /.co$/;\r\n      return !input || countryRegex.test(input) === false;\r\n    }\r\n  \r\n    const onSubmit = () => {\r\n      const isEmailValid = emailValidation();\r\n      const isCountryValid = countryValidation();\r\n  \r\n      if (Object.keys(input).length === 0) {\r\n        this.setState(\r\n          {\r\n            message: \"Email adress is required!\",\r\n          },\r\n          () => this.props.onEmailSubmit(this.state)\r\n        );\r\n      } else if (isCountryValid) {\r\n        this.setState(\r\n          {\r\n            isvalid: isEmailValid,\r\n            message: isEmailValid\r\n              ? \"Thanks for subscribing!\"\r\n              : \"Email Address not valid!\",\r\n          },\r\n          () => this.props.onEmailSubmit(this.state)\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            countryValid: isCountryValid,\r\n            message: isCountryValid\r\n              ? \"Thanks for subscribing!\"\r\n              : \"We are not accepting subscriptions from Colombia emails!\",\r\n          },\r\n          () => this.props.onEmailSubmit(this.state)\r\n        );\r\n      }\r\n    } */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"child-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: this.state.email,\n        onChange: inputChangeHandler,\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_c = EmailForm;\nexport default EmailForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"names":["React","EmailForm","state","email","inputChangeHandler","onSubmit","message"],"sources":["C:/wamp64/www/Study/CSS/css-in-react/src/EmailForm.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst EmailForm = () => {\r\n    /* const [email, setEmail] = React.useState(\"\");\r\n    const [isvalid, setIsvalid] = React.useState(false);\r\n    const [countryValid, setCountryValid] = React.useState(false);\r\n    const [message, setMessage] = React.useState(\"\");\r\n    const [input, setInput] = React.useState(\"\");\r\n\r\n\r\n    const inputChangeHandler = (event) => {\r\n        setInput(event.target.value);\r\n    \r\n    }\r\n\r\n    const emailValidation = () => {\r\n        const emailRegex =\r\n          /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n        return !(!input || emailRegex.test(input) === false);\r\n      }\r\n    \r\n      const countryValidation = () => {\r\n        const countryRegex = /.co$/;\r\n        return !input || countryRegex.test(input) === false;\r\n      }\r\n    \r\n      const onSubmit = () => {\r\n        const isEmailValid = emailValidation();\r\n        const isCountryValid = countryValidation();\r\n    \r\n        if (Object.keys(input).length === 0) {\r\n          this.setState(\r\n            {\r\n              message: \"Email adress is required!\",\r\n            },\r\n            () => this.props.onEmailSubmit(this.state)\r\n          );\r\n        } else if (isCountryValid) {\r\n          this.setState(\r\n            {\r\n              isvalid: isEmailValid,\r\n              message: isEmailValid\r\n                ? \"Thanks for subscribing!\"\r\n                : \"Email Address not valid!\",\r\n            },\r\n            () => this.props.onEmailSubmit(this.state)\r\n          );\r\n        } else {\r\n          this.setState(\r\n            {\r\n              countryValid: isCountryValid,\r\n              message: isCountryValid\r\n                ? \"Thanks for subscribing!\"\r\n                : \"We are not accepting subscriptions from Colombia emails!\",\r\n            },\r\n            () => this.props.onEmailSubmit(this.state)\r\n          );\r\n        }\r\n      } */\r\n  \r\n    return (\r\n        <div className=\"child-component\">\r\n            <div className=\"form-group mb-3\">\r\n                <label>\r\n                    <strong>Email</strong>\r\n                </label>\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={inputChangeHandler}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"d-grid\">\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={onSubmit}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </div>\r\n            <br />\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default EmailForm;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EACpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAKI,oBACI;IAAK,SAAS,EAAC,iBAAf;IAAA,wBACI;MAAK,SAAS,EAAC,iBAAf;MAAA,wBACI;QAAA,uBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QACI,IAAI,EAAC,OADT;QAEI,IAAI,EAAC,OAFT;QAGI,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAHtB;QAII,QAAQ,EAAEC,kBAJd;QAKI,SAAS,EAAC;MALd;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAcI;MAAK,SAAS,EAAC,QAAf;MAAA,uBACI;QACI,IAAI,EAAC,QADT;QAEI,SAAS,EAAC,iBAFd;QAGI,OAAO,EAAEC,QAHb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAdJ,eAuBI;MAAA;MAAA;MAAA;IAAA,QAvBJ,EAwBKC,OAxBL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA4BH,CAtFD;;KAAML,S;AAyFN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}