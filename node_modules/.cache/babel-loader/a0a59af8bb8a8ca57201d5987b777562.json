{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Study\\\\CSS\\\\css-in-react\\\\src\\\\EmailForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmailForm = props => {\n  _s();\n\n  const [email, setEmail] = React.useState(\"\");\n  const [isvalid, setIsvalid] = React.useState(false);\n  const [countryValid, setCountryValid] = React.useState(false);\n  const [message, setMessage] = React.useState(\"\");\n  const [input, setInput] = React.useState(\"\");\n\n  const inputChangeHandler = event => {\n    setInput(event.target.value);\n  };\n\n  const emailValidation = () => {\n    const emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    return !(!input || emailRegex.test(input) === false);\n  };\n\n  const countryValidation = () => {\n    const countryRegex = /.co$/;\n    return !input || countryRegex.test(input) === false;\n  };\n\n  const onSubmit = () => {\n    const isEmailValid = emailValidation();\n    const countryValid = countryValidation();\n\n    if (Object.keys(input).length === 0) {\n      setMessage(\"Email adress is required!\");\n    } else if (!countryValid) {\n      setMessage(\"We are not accepting subscriptions from Colombia emails!\"\n      /* ,\r\n      () => props.onEmailSubmit(state) */\n      );\n    } else if (!isEmailValid) {\n      setMessage(\"Email Address not valid!\"\n      /* ,\r\n      () => props.onEmailSubmit(state) */\n      );\n    } else {\n      setMessage(\"Thanks for subscribing!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"child-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: input,\n        onChange: inputChangeHandler,\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmailForm, \"4t3uk8llgua16uAQZsFNLvua/x0=\");\n\n_c = EmailForm;\nexport default EmailForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"names":["React","EmailForm","props","email","setEmail","useState","isvalid","setIsvalid","countryValid","setCountryValid","message","setMessage","input","setInput","inputChangeHandler","event","target","value","emailValidation","emailRegex","test","countryValidation","countryRegex","onSubmit","isEmailValid","Object","keys","length"],"sources":["C:/wamp64/www/Study/CSS/css-in-react/src/EmailForm.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst EmailForm = (props) => {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [isvalid, setIsvalid] = React.useState(false);\r\n  const [countryValid, setCountryValid] = React.useState(false);\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [input, setInput] = React.useState(\"\");\r\n\r\n  const inputChangeHandler = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const emailValidation = () => {\r\n    const emailRegex =\r\n      /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return !(!input || emailRegex.test(input) === false);\r\n  };\r\n\r\n  const countryValidation = () => {\r\n    const countryRegex = /.co$/;\r\n    return !input || countryRegex.test(input) === false;\r\n  };\r\n\r\n\r\n  const onSubmit = () => {\r\n    const isEmailValid = emailValidation();\r\n    const countryValid = countryValidation();\r\n\r\n    if (Object.keys(input).length === 0) {\r\n        setMessage(\"Email adress is required!\");\r\n    } else if (!countryValid) {\r\n      setMessage(\r\n        \"We are not accepting subscriptions from Colombia emails!\" /* ,\r\n        () => props.onEmailSubmit(state) */\r\n      );\r\n    } else if (!isEmailValid) {\r\n      setMessage(\r\n        \"Email Address not valid!\" /* ,\r\n    \r\n    () => props.onEmailSubmit(state) */\r\n      );\r\n    } else {\r\n      setMessage(\"Thanks for subscribing!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"child-component\">\r\n      <div className=\"form-group mb-3\">\r\n        <label>\r\n          <strong>Email</strong>\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={input}\r\n          onChange={inputChangeHandler}\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"d-grid\">\r\n        <button type=\"submit\" className=\"btn btn-primary\" onClick={onSubmit}>\r\n          Submit\r\n        </button>\r\n      </div>\r\n      <br />\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA1B;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,KAAK,CAACK,QAAN,CAAe,KAAf,CAA9B;EACA,MAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCT,KAAK,CAACK,QAAN,CAAe,KAAf,CAAxC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACK,QAAN,CAAe,EAAf,CAA9B;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACK,QAAN,CAAe,EAAf,CAA1B;;EAEA,MAAMS,kBAAkB,GAAIC,KAAD,IAAW;IACpCF,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;EACD,CAFD;;EAIA,MAAMC,eAAe,GAAG,MAAM;IAC5B,MAAMC,UAAU,GACd,sHADF;IAEA,OAAO,EAAE,CAACP,KAAD,IAAUO,UAAU,CAACC,IAAX,CAAgBR,KAAhB,MAA2B,KAAvC,CAAP;EACD,CAJD;;EAMA,MAAMS,iBAAiB,GAAG,MAAM;IAC9B,MAAMC,YAAY,GAAG,MAArB;IACA,OAAO,CAACV,KAAD,IAAUU,YAAY,CAACF,IAAb,CAAkBR,KAAlB,MAA6B,KAA9C;EACD,CAHD;;EAMA,MAAMW,QAAQ,GAAG,MAAM;IACrB,MAAMC,YAAY,GAAGN,eAAe,EAApC;IACA,MAAMV,YAAY,GAAGa,iBAAiB,EAAtC;;IAEA,IAAII,MAAM,CAACC,IAAP,CAAYd,KAAZ,EAAmBe,MAAnB,KAA8B,CAAlC,EAAqC;MACjChB,UAAU,CAAC,2BAAD,CAAV;IACH,CAFD,MAEO,IAAI,CAACH,YAAL,EAAmB;MACxBG,UAAU,CACR;MAA2D;AACnE;MAFgB,CAAV;IAID,CALM,MAKA,IAAI,CAACa,YAAL,EAAmB;MACxBb,UAAU,CACR;MAA2B;AACnC;MAFgB,CAAV;IAKD,CANM,MAMA;MACLA,UAAU,CAAC,yBAAD,CAAV;IACD;EACF,CApBD;;EAsBA,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,wBACE;MAAK,SAAS,EAAC,iBAAf;MAAA,wBACE;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QACE,IAAI,EAAC,OADP;QAEE,IAAI,EAAC,OAFP;QAGE,KAAK,EAAEC,KAHT;QAIE,QAAQ,EAAEE,kBAJZ;QAKE,SAAS,EAAC;MALZ;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAcE;MAAK,SAAS,EAAC,QAAf;MAAA,uBACE;QAAQ,IAAI,EAAC,QAAb;QAAsB,SAAS,EAAC,iBAAhC;QAAkD,OAAO,EAAES,QAA3D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAdF,eAmBE;MAAA;MAAA;MAAA;IAAA,QAnBF,EAoBGb,OApBH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CArED;;GAAMT,S;;KAAAA,S;AAuEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}