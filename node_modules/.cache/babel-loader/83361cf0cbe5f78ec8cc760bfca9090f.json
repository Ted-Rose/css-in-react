{"ast":null,"code":"import _slicedToArray from\"C:/wamp64/www/Study/CSS/css-in-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import\"./EmailForm.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EmailForm=function EmailForm(){var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),message=_React$useState2[0],setMessage=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),input=_React$useState4[0],setInput=_React$useState4[1];var inputChangeHandler=function inputChangeHandler(event){setInput(event.target.value);};var emailValidation=function emailValidation(){var emailRegex=/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;return!(!input||emailRegex.test(input)===false);};var countryValidation=function countryValidation(){var countryRegex=/.co$/;return!input||countryRegex.test(input)===false;};var onSubmit=function onSubmit(){var isEmailValid=emailValidation();var countryValid=countryValidation();if(Object.keys(input).length===0){setMessage(\"Email adress is required!\");}else if(!countryValid){setMessage(\"We are not accepting subscriptions from Colombia emails!\");}else if(!isEmailValid){setMessage(\"Email Address not valid!\");}else{setMessage(\"Thanks for subscribing!\");}};var preventDefault=function preventDefault(e){e.preventDefault();};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:preventDefault,action:\"#\",id:\"subscriptionForm\",className:\"subscriptionForm\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"email_field\",type:\"text\",className:\"emailField\",value:input,onChange:inputChangeHandler,name:\"email_field\",placeholder:\"Type your email address here\\u2026\"}),/*#__PURE__*/_jsx(\"button\",{className:\"submitButton\",onClick:onSubmit}),/*#__PURE__*/_jsx(\"div\",{className:\"message\",children:message})]})});};export default EmailForm;","map":{"version":3,"names":["React","EmailForm","useState","message","setMessage","input","setInput","inputChangeHandler","event","target","value","emailValidation","emailRegex","test","countryValidation","countryRegex","onSubmit","isEmailValid","countryValid","Object","keys","length","preventDefault","e"],"sources":["C:/wamp64/www/Study/CSS/css-in-react/src/EmailForm.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport \"./EmailForm.scss\";\r\n\r\nconst EmailForm = () => {\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [input, setInput] = React.useState(\"\");\r\n\r\n  const inputChangeHandler = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const emailValidation = () => {\r\n    const emailRegex =\r\n      /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return !(!input || emailRegex.test(input) === false);\r\n  };\r\n\r\n  const countryValidation = () => {\r\n    const countryRegex = /.co$/;\r\n    return !input || countryRegex.test(input) === false;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const isEmailValid = emailValidation();\r\n    const countryValid = countryValidation();\r\n\r\n    if (Object.keys(input).length === 0) {\r\n      setMessage(\"Email adress is required!\");\r\n    } else if (!countryValid) {\r\n      setMessage(\"We are not accepting subscriptions from Colombia emails!\");\r\n    } else if (!isEmailValid) {\r\n      setMessage(\"Email Address not valid!\");\r\n    } else {\r\n      setMessage(\"Thanks for subscribing!\");\r\n    }\r\n  };\r\n\r\n  const preventDefault = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={preventDefault}\r\n        action=\"#\"\r\n        id=\"subscriptionForm\"\r\n        className=\"subscriptionForm\"\r\n      >\r\n        <input\r\n          id=\"email_field\"\r\n          type=\"text\"\r\n          className=\"emailField\"\r\n          value={input}\r\n          onChange={inputChangeHandler}\r\n          name=\"email_field\"\r\n          placeholder=\"Type your email address hereâ€¦\"\r\n        />\r\n        <button className=\"submitButton\" onClick={onSubmit}></button>\r\n        <div className=\"message\">{message}</div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailForm;\r\n"],"mappings":"0HAAA,MAAOA,MAAP,KAAkB,OAAlB,CAEA,MAAO,kBAAP,C,wFAEA,GAAMC,UAAS,CAAG,QAAZA,UAAY,EAAM,CACtB,oBAA8BD,KAAK,CAACE,QAAN,CAAe,EAAf,CAA9B,oDAAOC,OAAP,qBAAgBC,UAAhB,qBACA,qBAA0BJ,KAAK,CAACE,QAAN,CAAe,EAAf,CAA1B,qDAAOG,KAAP,qBAAcC,QAAd,qBAEA,GAAMC,mBAAkB,CAAG,QAArBA,mBAAqB,CAACC,KAAD,CAAW,CACpCF,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR,CACD,CAFD,CAIA,GAAMC,gBAAe,CAAG,QAAlBA,gBAAkB,EAAM,CAC5B,GAAMC,WAAU,CACd,sHADF,CAEA,MAAO,EAAE,CAACP,KAAD,EAAUO,UAAU,CAACC,IAAX,CAAgBR,KAAhB,IAA2B,KAAvC,CAAP,CACD,CAJD,CAMA,GAAMS,kBAAiB,CAAG,QAApBA,kBAAoB,EAAM,CAC9B,GAAMC,aAAY,CAAG,MAArB,CACA,MAAO,CAACV,KAAD,EAAUU,YAAY,CAACF,IAAb,CAAkBR,KAAlB,IAA6B,KAA9C,CACD,CAHD,CAKA,GAAMW,SAAQ,CAAG,QAAXA,SAAW,EAAM,CACrB,GAAMC,aAAY,CAAGN,eAAe,EAApC,CACA,GAAMO,aAAY,CAAGJ,iBAAiB,EAAtC,CAEA,GAAIK,MAAM,CAACC,IAAP,CAAYf,KAAZ,EAAmBgB,MAAnB,GAA8B,CAAlC,CAAqC,CACnCjB,UAAU,CAAC,2BAAD,CAAV,CACD,CAFD,IAEO,IAAI,CAACc,YAAL,CAAmB,CACxBd,UAAU,CAAC,0DAAD,CAAV,CACD,CAFM,IAEA,IAAI,CAACa,YAAL,CAAmB,CACxBb,UAAU,CAAC,0BAAD,CAAV,CACD,CAFM,IAEA,CACLA,UAAU,CAAC,yBAAD,CAAV,CACD,CACF,CAbD,CAeA,GAAMkB,eAAc,CAAG,QAAjBA,eAAiB,CAACC,CAAD,CAAO,CAC5BA,CAAC,CAACD,cAAF,GACD,CAFD,CAIA,mBACE,kCACE,cACE,QAAQ,CAAEA,cADZ,CAEE,MAAM,CAAC,GAFT,CAGE,EAAE,CAAC,kBAHL,CAIE,SAAS,CAAC,kBAJZ,wBAME,cACE,EAAE,CAAC,aADL,CAEE,IAAI,CAAC,MAFP,CAGE,SAAS,CAAC,YAHZ,CAIE,KAAK,CAAEjB,KAJT,CAKE,QAAQ,CAAEE,kBALZ,CAME,IAAI,CAAC,aANP,CAOE,WAAW,CAAC,oCAPd,EANF,cAeE,eAAQ,SAAS,CAAC,cAAlB,CAAiC,OAAO,CAAES,QAA1C,EAfF,cAgBE,YAAK,SAAS,CAAC,SAAf,UAA0Bb,OAA1B,EAhBF,GADF,EADF,CAsBD,CA5DD,CA8DA,cAAeF,UAAf"},"metadata":{},"sourceType":"module"}